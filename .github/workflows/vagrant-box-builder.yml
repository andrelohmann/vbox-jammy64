name: Vagrant Box Builder

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted # as 13 is the latest intel arch

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Upgrade Runner
        run: |
          sudo apt update
          sudo apt upgrade -yqq

      - name: Cleanup vagrant boxes
        run: |
          vagrant box list | cut -f 1 -d ' ' | xargs -L 1 vagrant box remove -f || echo "No boxes"

      #- name: Test the login
      #  run: |
      #    export DATUM=$(date '+%Y%m%d')
      #    echo $DATUM
      #    echo "hcp login"
      #    hcp auth login --client-id=${{ secrets.HCP_CLIENT_ID }} --client-secret=${{ secrets.HCP_CLIENT_SECRET }}
      #    #export VAGRANT_CLOUD_TOKEN=";$(hcp auth print-access-token)"
      #    export VAGRANT_CLOUD_TOKEN="$(hcp auth print-access-token)"
      #    echo $VAGRANT_CLOUD_TOKEN
      #    echo "vagrant cloud login"
      #    vagrant cloud auth login --token $VAGRANT_CLOUD_TOKEN
      #    echo "vagrant cloud publish"
      #    vagrant cloud publish cloudcourse/noble64 $DATUM.0.0 virtualbox noble64.box

      - name: Download and extract ubuntu server cloudimage
        run: |
          ls -al
          curl -LO https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.ova
          tar --list -f noble-server-cloudimg-amd64.ova
          tar --extract -f noble-server-cloudimg-amd64.ova ubuntu-noble-24.04-cloudimg.ovf
          tar --delete -f noble-server-cloudimg-amd64.ova ubuntu-noble-24.04-cloudimg.ovf
          mv ubuntu-noble-24.04-cloudimg.ovf box.ovf
          tar --append -f noble-server-cloudimg-amd64.ova box.ovf
          rm box.ovf
          tar --append -f noble-server-cloudimg-amd64.ova metadata.json
          tar --list -f noble-server-cloudimg-amd64.ova

      - name: Add the box to vagrant
        run: |
          vagrant box add --name noble64 ./noble-server-cloudimg-amd64.ova
          vagrant box list
      #    vagrant plugin install vagrant-vbguest

      - name: Startup the instance
        run: |
          vagrant up

      - name: List and repackage
        run: |
          vagrant package --output noble64.box
          vagrant destroy -f

      - name: version
        run: echo $(date '+%Y%m%d')
        id: version

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload box artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./noble64.box
          asset_name: noble64.box
          asset_content_type: application/gzip

      - name: Upload new Box Version
        run: |
          export DATUM=$(date '+%Y%m%d')
          echo $DATUM
          echo "hcp login"
          hcp auth login --client-id=${{ secrets.HCP_CLIENT_ID }} --client-secret=${{ secrets.HCP_CLIENT_SECRET }}
          export VAGRANT_CLOUD_TOKEN=";$(hcp auth print-access-token)"
          echo $VAGRANT_CLOUD_TOKEN
          echo "vagrant cloud login"
          vagrant cloud auth login --token $VAGRANT_CLOUD_TOKEN
          echo "vagrant cloud publish"
          vagrant cloud publish cloudcourse/noble64 $DATUM.0.0 virtualbox noble64.box
          #response=$(curl \
          #--request GET \
          #--header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
          #https://app.vagrantup.com/api/v2/box/cloudcourse/noble64/version/$DATUM.0.0/provider/virtualbox/amd64/upload)
          # Requires the jq command
          #upload_path=$(echo "$response" | jq .upload_path)
          #curl \
          #--request PUT \
          #--upload-file noble64.box \
          #"${upload_path}"

      - name: Remove noble64 box
        run: |
          vagrant box list
          vagrant box remove noble64

      # Run Bartender
      #- name: Run a multi-line script
      #  run: |
      #    git clone https://github.com/ubuntu-bartenders/ubuntu-old-fashioned.git
      #    cd ubuntu-old-fashioned/scripts/ubuntu-bartender/
      #    sudo ./ubuntu-bartender --livecd-rootfs-branch ubuntu/noble --build-provider multipass -- --series noble --image-target vagrant --project ubuntu-cpc
